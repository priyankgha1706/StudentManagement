// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace StudentAppCore.Entity.Student_Models
{
    public partial class Student_ManagementContext : DbContext
    {
        public Student_ManagementContext()
        {
        }

        public Student_ManagementContext(DbContextOptions<Student_ManagementContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Student_Marks> Student_Marks { get; set; }
        public virtual DbSet<User_Login> User_Login { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer("Data Source=(localdb)\\MSSqlLocalDb;Initial Catalog=Student_Management;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Student_Marks>(entity =>
            {
                entity.HasKey(e => e.Std_Id);

                entity.Property(e => e.Average).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Create_Time_Stamp).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Roll_No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Update_Time_Stamp).HasColumnType("datetime");

                entity.HasOne(d => d.User_)
                    .WithMany(p => p.Student_Marks)
                    .HasForeignKey(d => d.User_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Student_Marks_Student_Marks");
            });

            modelBuilder.Entity<User_Login>(entity =>
            {
                entity.HasKey(e => e.User_Id);

                entity.Property(e => e.Create_Time_Stamp)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Update_Time_Stamp)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.User_Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}